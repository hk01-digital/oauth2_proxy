if: branch =~ ^master$|^development$|^ci- AND type != pull_request
language: python
group: stable
dist: trusty
os: linux
sudo: required
services:
  - docker
install: skip
script: skip
cache: pip

jobs:
  include:
    - stage: test
      language: go
      go:
        - 1.8.x
        - 1.9.x
      script:
        - wget -O dep https://github.com/golang/dep/releases/download/v0.3.2/dep-linux-amd64
        - chmod +x dep
        - ./dep ensure
        - ./test.sh
      sudo: false
      notifications:
        email: false
    - stage: deploy
      script: |
        set -ex
        if [ "master" == "${TRAVIS_BRANCH}" ]; then
          registry_id=$AWS_REGISTRY_ID_PRODUCTION
          region=$AWS_REGION_PRODUCTION
          name=$AWS_ECR_NAME_PRODUCTION
          export AWS_ACCESS_KEY_ID=$AWS_ECR_ACCESS_KEY_ID_PRODUCTION
          export AWS_SECRET_ACCESS_KEY=$AWS_ECR_SECRET_ACCESS_KEY_PRODUCTION
        else
          registry_id=$AWS_REGISTRY_ID_STAGING
          region=$AWS_REGION_STAGING
          name=$AWS_ECR_NAME_STAGING
          export AWS_ACCESS_KEY_ID=$AWS_ECR_ACCESS_KEY_ID_STAGING
          export AWS_SECRET_ACCESS_KEY=$AWS_ECR_SECRET_ACCESS_KEY_STAGING
        fi

        registry="${registry_id}.dkr.ecr.${region}.amazonaws.com"
        tag_latest="$registry/$name:latest"
        tag_build_num="$registry/$name:v${TRAVIS_BUILD_NUMBER}-build"
        tag_commit_hash="$registry/$name:commit-${TRAVIS_COMMIT}"
        docker build \
          -t $tag_latest \
          -t $tag_build_num \
          -t $tag_commit_hash \
          .

        pip install awscli --upgrade
        $(aws ecr get-login --registry-ids $registry_id --region $region --no-include-email)
        docker push $tag_build_num
        docker push $tag_latest

